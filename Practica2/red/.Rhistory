install.packages("SNNS")
source('~/Universidad/Redes de Neuronas Artificiales/RedesNeuronasArtificiales/Practica1/PM2019_Reg.R', echo=TRUE)
source('~/Universidad/Redes de Neuronas Artificiales/RedesNeuronasArtificiales/Practica1/PM2019_Reg.R', echo=TRUE)
source('~/Universidad/Redes de Neuronas Artificiales/RedesNeuronasArtificiales/Practica1/PM2019_Reg.R', echo=TRUE)
source('~/Universidad/Redes de Neuronas Artificiales/RedesNeuronasArtificiales/Practica1/PM2019_Reg.R', echo=TRUE)
source('~/Universidad/Redes de Neuronas Artificiales/RedesNeuronasArtificiales/Practica1/PM2019_Reg.R', echo=TRUE)
setwd("~/Universidad/Redes de Neuronas Artificiales/RedesNeuronasArtificiales/Practica2")
library(RSNNS)
testSet  <- read.csv(paste("test", 1,".csv",sep=""),dec=".",sep=",",header = T)
library(RSNNS)
graficaError <- function(iterativeErrors){
plot(1:nrow(iterativeErrors),iterativeErrors[,1], type="l", main="Evoluci?n del error",
ylab="MSE (3 salidas)",xlab="Ciclos",
ylim=c(min(iterativeErrors),max(iterativeErrors)))
lines(1:nrow(iterativeErrors),iterativeErrors[,2], col="red")
}
accuracy <- function (cm) sum(diag(cm))/sum(cm)
set.seed(1)
#CARGA DE LOS DATOS
# cambiar a fold 2 y 3
folds <- c(1, 2, 3, 4)
trainSet <- read.csv(paste("train",1,".csv",sep=""),dec=".",sep=",",header = T)
testSet  <- read.csv(paste("test", 1,".csv",sep=""),dec=".",sep=",",header = T)
#CARGA DE LOS DATOS
# cambiar a fold 2 y 3
folds <- c(1, 2, 3, 4)
trainSet <- read.csv(paste("datos/train",1,".csv",sep=""),dec=".",sep=",",header = T)
testSet  <- read.csv(paste("datos/test", 1,".csv",sep=""),dec=".",sep=",",header = T)
#SELECCION DE LA SALIDA. Num de columna del target.
nTarget <- ncol(trainSet)
#SEPARAR ENTRADA DE LA SALIDA
trainInput <- trainSet[,-nTarget]
testInput <-  testSet[,-nTarget]
#TRANSFORMAR LA SALIDA DISCRETA A NUMERICA (Matriz con columnas, una por etiqueta, hay un 1 por cada fila en la columna que pertenece a la clase)
trainTarget <- decodeClassLabels(trainSet[,nTarget])
testTarget <-  decodeClassLabels(testSet[,nTarget])
# transformar las entradas de dataframe en matrix para mlp:
trainInput <- as.matrix(trainInput)
testInput  <- as.matrix(testInput )
#SELECCION DE LOS HIPERPARAMETROS DE LA RED
topologia        <- c(10,10)
razonAprendizaje <- 0.001
ciclosMaximos    <- 10000
## generar un nombre de fichero que incluya los hiperpar?metros
fileID <- paste("fold_",fold,"_topol",paste(topologia,collapse="-"),"_ra",
razonAprendizaje,"_iter",ciclosMaximos,sep="")
set.seed(1)
source('~/Universidad/Redes de Neuronas Artificiales/RedesNeuronasArtificiales/Practica2/PM_Clas20-21.R', echo=TRUE)
source('~/Universidad/Redes de Neuronas Artificiales/RedesNeuronasArtificiales/Practica2/red/PM_Clas20-21.R', echo=TRUE)
setwd("~/Universidad/Redes de Neuronas Artificiales/RedesNeuronasArtificiales/Practica2/red")
source('~/Universidad/Redes de Neuronas Artificiales/RedesNeuronasArtificiales/Practica2/red/PM_Clas20-21.R', echo=TRUE)
testSet
testSet[,nTarget]
testTarget
source('~/Universidad/Redes de Neuronas Artificiales/RedesNeuronasArtificiales/Practica2/red/PM_Clas20-21.R', echo=TRUE)
