install.packages("SNNS")
install.packages("RSNNS")
validSet <- read.csv("inputs/validation_set.csv", dec=".", sep=",", header = T)
#CARGA DE DATOS
# se supone que los ficheros tienen encabezados
trainSet <- read.csv("./inputs/training_set.csv", dec=".", sep=",", header = T)
setwd("~/Universidad/Redes de Neuronas Artificiales/RedesNeuronasArtificiales/Practica1")
#CARGA DE DATOS
# se supone que los ficheros tienen encabezados
trainSet <- read.csv("./inputs/training_set.csv", dec=".", sep=",", header = T)
source('~/Universidad/Redes de Neuronas Artificiales/RedesNeuronasArtificiales/Practica1/PM2019_Reg.R')
clearPushBack()
clear
source('~/Universidad/Redes de Neuronas Artificiales/RedesNeuronasArtificiales/Practica1/PM2019_Reg.R')
source('~/Universidad/Redes de Neuronas Artificiales/RedesNeuronasArtificiales/Practica1/PM2019_Reg.R')
plotIterativeError(model)
source('~/Universidad/Redes de Neuronas Artificiales/RedesNeuronasArtificiales/Practica1/PM2019_Reg.R')
summary(modelo)
source('~/Universidad/Redes de Neuronas Artificiales/RedesNeuronasArtificiales/Practica1/PM2019_Reg.R', echo=TRUE)
source('~/Universidad/Redes de Neuronas Artificiales/RedesNeuronasArtificiales/Practica1/PM2019_Reg.R', echo=TRUE)
source('~/Universidad/Redes de Neuronas Artificiales/RedesNeuronasArtificiales/Practica1/PM2019_Reg.R', echo=TRUE)
trainSet
salida
source('~/Universidad/Redes de Neuronas Artificiales/RedesNeuronasArtificiales/Practica1/PM2019_Reg.R', echo=TRUE)
